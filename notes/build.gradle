import dependencies.Dependencies
import dependencies.GoogleGuavaConflict
import dependencies.Modules
import dependencies.SupportDependencies
import dependencies.TestDependencies
import dependencies.Versions
import dependencies.AnnotationProcessorsDependencies

apply plugin: 'com.android.dynamic-feature'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Versions.compilesdk

    defaultConfig {
        minSdkVersion Versions.minsdk
        targetSdkVersion Versions.targetsdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility = dependencies.JavaVersion.version_1_8
        targetCompatibility = dependencies.JavaVersion.version_1_8
    }

    kotlinOptions {
        jvmTarget = dependencies.JavaVersion.version_1_8.toString()
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(Modules.app)
    implementation project(Modules.core)
    testImplementation 'junit:junit:4.12'

    androidTestImplementation project(Modules.app)
    androidTestImplementation TestDependencies.kotlin_test
    androidTestImplementation TestDependencies.espresso_core
    androidTestImplementation TestDependencies.idling_resource
    androidTestImplementation TestDependencies.mockk
    androidTestImplementation TestDependencies.test_runner
    androidTestImplementation TestDependencies.test_rules
    androidTestImplementation TestDependencies.text_core_ktx

    implementation Dependencies.navigation_fragment
    implementation Dependencies.dagger
    implementation Dependencies.room_runtime
    implementation Dependencies.room_ktx
    implementation Dependencies.markdown_processor
    implementation Dependencies.work_manager

    implementation SupportDependencies.appcompat
    implementation SupportDependencies.constraintlayout
    implementation SupportDependencies.material_design
    implementation SupportDependencies.swipe_refresh_layout

    kapt AnnotationProcessorsDependencies.dagger_compiler
    kapt AnnotationProcessorsDependencies.room_compiler
}



